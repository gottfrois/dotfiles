#!/usr/bin/env bash

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1
SUB_COMMAND_NAME=$2

sub_help () {
  echo "Usage: $BIN_NAME <command>"
  echo
  echo "Commands:"
  echo "   clean            Clean up caches (brew, nvm, gem)"
  echo "   dock             Apply macOS Dock settings"
  echo "   help             This help message"
  echo "   macos            Apply macOS system defaults"
  echo "   restore          Restore applications settings using mackup"
  echo "   update           Update packages and pkg managers (OS, brew, npm, gem)"
  echo "   upgrade          Pull latest master branch for ~/.dotfiles repo"
}

sub_upgrade () {
  echo "Upgrading ~/.dotfiles repository..."
  cd ~/.dotfiles && git pull
}

sub_update () {
  echo "Updating system..."
  sudo softwareupdate -i -a
  brew update
  brew upgrade
  npm install npm -g
  npm update -g
  asdf update
}

sub_clean () {
  echo "Cleaning caches..."
  brew cleanup
  gem cleanup
}

sub_restore () {
  echo "Restoring applications settings..."
  mackup restore
}

sub_macos () {
  for FILE in $(ls -A ~/.dotfiles/macos/defaults*.sh); do
    echo "Applying $FILE" && $FILE
  done
  echo "Done. Some changes may require a logout/restart to take effect."
}

sub_dock () {
  ~/.dotfiles/macos/dock.sh && echo "Dock reloaded."
}

case $COMMAND_NAME in
  "" | "-h" | "--help")
    sub_help
    ;;
  *)
    shift
    sub_${COMMAND_NAME} $@
    if [ $? = 127 ]; then
      echo "'$COMMAND_NAME' is not a known command or has errors." >&2
      sub_help
      exit 1
    fi
    ;;
esac
